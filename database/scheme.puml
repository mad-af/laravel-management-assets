@startuml
!define table(x) class x << (T,#FFAAAA) >>
!define pk(x) <u>x</u>
!define fk(x) <i>x</i>

title Laravel Asset Management System - ERD (Multi-tenant) + Asset Transfer (MVP) + Vehicle (MVP) + Service Log Enhancements (Branches) â€” Refactor v3

table(companies) {
  pk(id) : UUID
  name : VARCHAR [UNIQUE]
  code : VARCHAR [UNIQUE]
  fk(hq_branch_id) : UUID [NULL]
  tax_id : VARCHAR [NULL]
  phone : VARCHAR [NULL]
  email : VARCHAR [NULL]
  website : VARCHAR [NULL]
  is_active : BOOLEAN [DEFAULT: true]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(users) {
  pk(id) : UUID
  name : VARCHAR
  email : VARCHAR [UNIQUE]
  role : ENUM(admin, staff, auditor) [DEFAULT: staff]
  email_verified_at : TIMESTAMP [NULL]
  password : VARCHAR
  remember_token : VARCHAR [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(user_companies) {
  pk(id) : UUID
  fk(user_id) : UUID
  fk(company_id) : UUID
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(categories) {
  pk(id) : UUID
  name : VARCHAR [UNIQUE]
  is_active : BOOLEAN [DEFAULT: true]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(branches) {
  pk(id) : UUID
  fk(company_id) : UUID
  name : VARCHAR
  address : TEXT [NULL]
  is_active : BOOLEAN [DEFAULT: true]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(employees) {
  pk(id) : UUID
  fk(company_id) : UUID
  fk(branch_id) : UUID [NULL]
  employee_number : INT [UNIQUE, NULL]
  full_name : VARCHAR
  email : VARCHAR [NULL]
  phone : VARCHAR [NULL]
  is_active : BOOLEAN [DEFAULT: true]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(assets) {
  pk(id) : UUID
  fk(company_id) : UUID
  code : VARCHAR [UNIQUE]
  tag_code : VARCHAR [UNIQUE, NULL]
  name : VARCHAR
  fk(category_id) : UUID
  fk(branch_id) : UUID
  brand : VARCHAR(64) [NULL]
  model : VARCHAR(64) [NULL]
  image : VARCHAR(255) [NULL]
  status : ENUM(active, inactive, lost, maintenance, on_loan) [DEFAULT: active]
  condition : ENUM(good, fair, poor) [DEFAULT: good]
  value : DECIMAL(15,2)
  purchase_date : DATE [NULL]
  description : TEXT [NULL]
  last_seen_at : TIMESTAMP [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(asset_logs) {
  pk(id) : UUID
  fk(asset_id) : UUID
  fk(user_id) : UUID
  action : VARCHAR
  changed_fields : JSON [NULL]
  notes : TEXT [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(asset_loans) {
  pk(id) : UUID
  fk(asset_id) : UUID
  fk(employee_id) : UUID
  checkout_at : TIMESTAMP
  due_at : TIMESTAMP
  checkin_at : TIMESTAMP [NULL]
  condition_out : ENUM(good, fair, poor)
  condition_in : ENUM(good, fair, poor) [NULL]
  notes : TEXT [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(asset_maintenances) {
  pk(id) : UUID
  code : VARCHAR [UNIQUE]
  fk(asset_id) : UUID
  fk(employee_id) : UUID [NULL]
  title : VARCHAR
  type : ENUM(preventive, corrective)
  status : ENUM(open, in_progress, completed, cancelled) [DEFAULT: open]
  priority : ENUM(low, medium, high) [DEFAULT: medium]
  started_at : TIMESTAMP [NULL]
  estimated_completed_at : TIMESTAMP [NULL]
  completed_at : TIMESTAMP [NULL]
  cost : DECIMAL(15,2) [DEFAULT: 0.00]
  technician_name : VARCHAR [NULL]
  vendor_name : VARCHAR [NULL]
  notes : TEXT [NULL]
  odometer_km_at_service : INT [NULL]
  next_service_target_odometer_km : INT [NULL]
  next_service_date : DATE [NULL]
  invoice_no : VARCHAR [NULL]
  service_tasks : JSON [NULL] [DEFAULT: []]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(asset_transfers) {
  pk(id) : UUID
  fk(company_id) : UUID
  transfer_no : VARCHAR [UNIQUE]
  reason : VARCHAR [NULL]
  status : ENUM(shipped, delivered) [DEFAULT: shipped]
  type : ENUM(branch, company) [DEFAULT: branch]
  fk(from_branch_id) : UUID [NULL]
  fk(to_branch_id) : UUID [NULL]
  fk(requested_by) : UUID
  fk(approved_by) : UUID [NULL]
  scheduled_at : TIMESTAMP [NULL]
  executed_at : TIMESTAMP [NULL]
  notes : TEXT [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(asset_transfer_items) {
  pk(id) : UUID
  fk(asset_transfer_id) : UUID
  fk(asset_id) : UUID
  fk(from_branch_id) : UUID
  fk(to_branch_id) : UUID
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(asset_branch_history) {
  pk(id) : UUID
  fk(asset_id) : UUID
  fk(from_branch_id) : UUID [NULL]
  fk(to_branch_id) : UUID
  fk(transfer_id) : UUID [NULL]
  remark : VARCHAR [NULL]
}

table(vehicle_profiles) {
  pk(asset_id) : UUID
  year_purchase : INT
  year_manufacture : INT
  current_odometer_km : INT [DEFAULT: 0]
  last_service_date : DATE [NULL]
  service_target_odometer_km : INT [NULL]
  plate_no : VARCHAR(32) [NULL]
  vin : VARCHAR(64) [NULL]
  owner : VARCHAR(64) [NULL]
  type : ENUM(passenger, cargo, motorcycle)
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(vehicle_odometer_logs) {
  pk(id) : UUID
  fk(asset_id) : UUID
  odometer_km : INT
  read_at : TIMESTAMP
  source : ENUM(manual, service) [DEFAULT: manual]
  notes : TEXT [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(vehicle_tax_types) {
  pk(id) : UUID
  fk(asset_id) : UUID
  tax_type : ENUM(pkb_tahunan, kir)
  due_date : DATE
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(vehicle_tax_histories) {
  pk(id) : UUID
  fk(vehicle_tax_type_id) : UUID
  fk(asset_id) : UUID
  paid_date : DATE
  year : INT
  amount : DECIMAL(15,2)
  receipt_no : VARCHAR(64) [NULL]
  notes : TEXT [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

' ==========================
' Insurance (Vehicle) module
' ==========================

table(insurances) {
  pk(id) : UUID
  name : VARCHAR
  phone : VARCHAR [NULL]
  email : VARCHAR [NULL]
  address : TEXT [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(insurance_policies) {
  pk(id) : UUID
  fk(asset_id) : UUID
  fk(insurance_id) : UUID
  policy_no : VARCHAR [UNIQUE]
  policy_type : ENUM(comprehensive, tlo, tpft, tpo) [DEFAULT: comprehensive]
  start_date : DATE
  end_date : DATE
  status : ENUM(active, inactive) [DEFAULT: active]
  notes : TEXT [NULL]
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

table(insurance_claims) {
  pk(id) : UUID
  fk(policy_id) : UUID
  fk(asset_id) : UUID
  claim_no : VARCHAR [UNIQUE]
  incident_date : DATE
  incident_type : ENUM(collision, theft, flood, fire, other) [DEFAULT: other]
  incident_other : VARCHAR [NULL]
  description : TEXT [NULL]
  source : ENUM(manual, maintenance) [DEFAULT: manual]
  fk(asset_maintenance_id) : UUID [NULL]
  status : ENUM(draft, submitted, approved, rejected) [DEFAULT: draft]
  
  ' ==== Simplified: merge Documents + Disbursement into Claims ====
  claim_documents : JSON [NULL] [DEFAULT: []] ' array of {doc_type, file_path, description}
  
  amount_approved : DECIMAL(15,2) [NULL]
  amount_paid : DECIMAL(15,2)

  fk(created_by) : UUID
  created_at : TIMESTAMP
  updated_at : TIMESTAMP
}

' Notes & Constraints
note right of insurance_policies
  - Only one ACTIVE policy per asset with non-overlapping coverage windows.
  - Enforce via application logic and/or partial unique index on (asset_id) where status='active'.
  - start_date < end_date.
end note

note right of insurance_claims
  - Documents simplified as JSON array on the claim record (keep it simple; no join table).
  - Disbursement fields embedded on the claim for straightforward flow.
  - Keep high-level claim.status; use disb_status only for payout state.
end note

' Relationships
' ==========================
companies ||--o{ categories : "has many"
companies ||--o{ branches : "has many"
companies ||--o{ assets : "has many"
companies ||--o{ asset_transfers : "has many"
companies ||--o{ employees : "has many"

users ||--o{ user_companies : "memberships"
companies ||--o{ user_companies : "memberships"

categories ||--o{ assets : "has many"
branches ||--o{ assets : "has many"
employees ||--o{ asset_loans : "borrows"
employees ||--o{ asset_maintenances : "assigned to"
assets ||--o{ asset_logs : "has many"
assets ||--o{ asset_loans : "has many"
assets ||--o{ asset_maintenances : "has many"
users ||--o{ asset_logs : "creates"
users ||--o{ sessions : "has many"
users ||--o{ password_reset_tokens : "has many"

asset_transfers ||--o{ asset_transfer_items : "has many"
assets ||--o{ asset_branch_history : "has many"
users ||--o{ asset_transfers : "requests/approves"

branches ||--o{ asset_transfers : "as from_branch"
branches ||--o{ asset_transfers : "as to_branch"
branches ||--o{ asset_transfer_items : "as from_branch"
branches ||--o{ asset_transfer_items : "as to_branch"
branches ||--o{ asset_branch_history : "as from_branch"
branches ||--o{ asset_branch_history : "as to_branch"

asset_transfers ||--o{ asset_branch_history : "writes"

assets ||--|| vehicle_profiles : "has one"
assets ||--o{ vehicle_odometer_logs : "has many"
assets ||--o{ vehicle_tax_types : "has many"
vehicle_tax_types ||--o{ vehicle_tax_histories : "has many"

' = Insurance Relationships =
assets ||--o{ insurance_policies : "has many"
insurance_providers ||--o{ insurance_policies : "provides"
insurance_policies ||--o{ insurance_claims : "claims"
assets ||--o{ insurance_claims : "has many"
asset_maintenances ||--o{ insurance_claims : "source (if maintenance)"
users ||--o{ insurance_claims : "created_by"

@enduml
